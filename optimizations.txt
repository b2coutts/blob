IMPORTANT: make fixed_hull/insert_nearest check that the removed point is
actually in the bounding box of the line (i.e., is between a and by by (a-b)^T)

- iterate over points in b2.cpp:fixed_hull more intelligently
- precompute distances between each pair of points

- do a final pass on the polygon to skip circles that should be skipped
    - note: this should fix the issue seen in datasets/torus

- should be more lenient in allowing points into the convex hull; some points
  are far enough that their radius does not affect the polytope edge, but close
  enough that it should affect the interpolant edge
    - PROBLEM: will this cause a chain reaction that adds all excluded points to
      the polytope in a dense dataset?

- instead of adding points to a line in order along the line, add the nearest
  point to the line, and reiterate (so the points can be added to either new
  half of the broken line)
    - less efficient, but probably better

BUG: comb 34, set 11
    - seems to a problem with detecting crossovers; the second pair of blue
      points crosses over "behind" the first line. Could maybe fix by figuring
      out which side of the line it's not allowed to be on.
